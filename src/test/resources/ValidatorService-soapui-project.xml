<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="213470eb-ab47-49d3-af8f-284db7023306" activeEnvironment="Default" name="ValidatorService" resourceRoot="" soapui-version="5.3.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="7dc01773-3e5f-45ca-ac34-7c3e05f2d8c3" wsaVersion="NONE" name="ValidatorServiceSOAPBinding" type="wsdl" bindingName="{http://services/ValidatorService/}ValidatorServiceSOAPBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/vandeloc/Documents/Documents/SEMIC/Eclipse%20workspace/APIval/src/main/resources/services/ValidatorService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Users\vandeloc\Documents\Documents\SEMIC\Eclipse%20workspace\APIval\src\main\resources\services\ValidatorService.wsdl"><con:part><con:url>file:\C:\Users\vandeloc\Documents\Documents\SEMIC\Eclipse%20workspace\APIval\src\main\resources\services\ValidatorService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services/ValidatorService/" name="ValidatorService" xmlns="http://services/ValidatorService/" xmlns:tns="http://services/ValidatorService/" xmlns:val="http://adms-ap.semic.eu/validator/1.0/xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://services/ValidatorService/">
      <xsd:import namespace="http://adms-ap.semic.eu/validator/1.0/xsd" schemaLocation="../entities/validatorschema1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="DefinitionRequest">
    <wsdl:part element="val:DefinitionRequestType" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="DefinitionResponse">
    <wsdl:part element="val:DefinitionResponseType" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ValidateRequest">
    <wsdl:part element="val:ValidateRequestType" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ValidateResponse">
    <wsdl:part element="val:ValidateResponseType" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ADMSError">
    <wsdl:part element="val:ADMSException" name="fault"/>
  </wsdl:message>
  <wsdl:portType name="IValidatorService">
    <wsdl:operation name="getDefinition">
      <wsdl:input message="tns:DefinitionRequest"/>
      <wsdl:output message="tns:DefinitionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <wsdl:input message="tns:ValidateRequest"/>
      <wsdl:output message="tns:ValidateResponse"/>
      <wsdl:fault message="tns:ADMSError" name="ADMSError"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ValidatorServiceSOAPBinding" type="tns:IValidatorService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getDefinition">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ADMSError">
        <soap:fault name="ADMSError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ValidatorService">
    <wsdl:port name="ValidatorServicePort" binding="tns:ValidatorServiceSOAPBinding">
      <soap:address location="http://localhost:8080/ADMS-AP_Validator/services/validator/ValidatorService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\Users\vandeloc\Documents\Documents\SEMIC\Eclipse%20workspace\APIval\src\main\resources\entities\validatorschema1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://adms-ap.semic.eu/validator/1.0/xsd" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns="http://adms-ap.semic.eu/validator/1.0/xsd" xmlns:tns="http://adms-ap.semic.eu/validator/1.0/xsd" xmlns:tnr="http://adms-ap.semic.eu/validator/1.0/xsd/2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:gitb="http://www.gitb.com/core/v1/">
  <xsd:import namespace="http://adms-ap.semic.eu/validator/1.0/xsd/2" schemaLocation="../entities/validatorschema2.xsd"/>
  <xsd:import namespace="http://www.gitb.com/core/v1/" schemaLocation="gitb_core.xsd"/>
  <xsd:element name="DefinitionRequestType" type="tns:Void"/>
  <xsd:element name="DefinitionResponseType" type="tns:GetModuleDefinitionResponse"/>
  <xsd:element name="ValidateRequestType" type="tns:ValidateRequest"/>
  <xsd:element name="ValidateResponseType" type="tns:ValidateResponse"/>
  <xsd:element name="ADMSException" type="tns:ADMSExceptionError"/>
  <xsd:complexType name="Void">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="GetModuleDefinitionResponse">
    <xsd:sequence>
      <xsd:element name="module" type="gitb:ValidationModule"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ValidateRequest">
    <xsd:sequence>
      <xsd:element name="rulesURI" type="tnr:URIContent" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="databaseURI" type="tnr:URIContent" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="dataURI" type="tnr:URIContent" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="sessionID" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="outputFormat" type="tnr:outputFormat" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ValidateResponse">
    <xsd:sequence>
      <xsd:element name="sessionID" type="xsd:string"/>
      <xsd:element name="report" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ADMSExceptionError">
    <xsd:sequence>
      <xsd:element name="faultCode" type="xsd:string"/>
      <xsd:element name="faultString" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\vandeloc\Documents\Documents\SEMIC\Eclipse%20workspace\APIval\src\main\resources\entities\validatorschema2.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://adms-ap.semic.eu/validator/1.0/xsd/2" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns="http://adms-ap.semic.eu/validator/1.0/xsd/2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:gitb="http://www.gitb.com/core/v1/">
  <xsd:import namespace="http://www.gitb.com/core/v1/" schemaLocation="gitb_core.xsd"/>
  <!--Representation (serialisation) of a URI value-->
  <xsd:complexType name="URIContent">
    <xsd:sequence>
      <xsd:element name="value" type="xsd:anyURI" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
    <xsd:attribute name="embeddingMethod" type="gitb:ValueEmbeddingEnumeration" use="optional" default="URI"/>
  </xsd:complexType>
  <!--outputFormat-->
  <xsd:complexType name="outputFormat">
    <xsd:sequence>
      <xsd:element name="value" type="outputFormatEnumeration" minOccurs="1" maxOccurs="1" default="XML"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Enumeration for output format of the result-->
  <xsd:simpleType name="outputFormatEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="XML"/>
      <xsd:enumeration value="JSON"/>
      <xsd:enumeration value="TSV"/>
      <xsd:enumeration value="CSV"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\vandeloc\Documents\Documents\SEMIC\Eclipse%20workspace\APIval\src\main\resources\entities\gitb_core.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.gitb.com/core/v1/" elementFormDefault="qualified" version="1.0" xmlns="http://www.gitb.com/core/v1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:element name="module" type="TestModule"/>
  <!--General Metadata element to describe the metadata of artifacts-->
  <xsd:simpleType name="ID">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[a-zA-Z0-9_]+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Metadata">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="type" type="TestCaseType" minOccurs="0"/>
      <xsd:element name="version" type="xsd:string"/>
      <xsd:element name="authors" type="xsd:string" minOccurs="0"/>
      <xsd:element name="description" type="xsd:string" minOccurs="0"/>
      <xsd:element name="published" type="xsd:string" minOccurs="0"/>
      <xsd:element name="lastModified" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActorConfiguration">
    <xsd:sequence>
      <xsd:element name="config" type="Configuration" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="actor" type="xsd:string" use="required"/>
    <xsd:attribute name="endpoint" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <!--List of Actor Definitions-->
  <xsd:complexType name="Actors">
    <xsd:sequence>
      <xsd:element name="actor" type="Actor" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Complete Definition of an Actor-->
  <xsd:complexType name="Actor">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="desc" type="xsd:string" minOccurs="0"/>
      <xsd:element name="endpoint" type="Endpoint" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="ID" use="required"/>
  </xsd:complexType>
  <!--Endpoint definition-->
  <xsd:complexType name="Endpoint">
    <xsd:sequence>
      <xsd:element name="config" type="Parameter" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="ID" use="required"/>
    <xsd:attribute name="desc" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <!--List of Testcase Role Definitions-->
  <xsd:complexType name="Roles">
    <xsd:sequence>
      <xsd:element name="actor" type="TestRole" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--List of Testcase Role definition-->
  <xsd:complexType name="TestRole">
    <xsd:sequence>
      <xsd:element name="endpoint" type="Endpoint" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:ID" use="required"/>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="role" type="TestRoleEnumeration" use="required"/>
  </xsd:complexType>
  <!--Configuration name-value pair-->
  <xsd:complexType name="Configuration">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="name" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--Abstract TestModule definition-->
  <xsd:complexType name="TestModule">
    <xsd:sequence>
      <xsd:element name="metadata" type="Metadata"/>
      <xsd:element name="inputs" type="TypedParameters" minOccurs="0"/>
      <xsd:element name="outputs" type="TypedParameters" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string"/>
    <xsd:attribute name="uri" type="xsd:string"/>
    <xsd:attribute name="isRemote" type="xsd:boolean" default="true"/>
    <xsd:attribute name="serviceLocation" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <!--Validation Module Definition-->
  <xsd:complexType name="ValidationModule">
    <xsd:complexContent>
      <xsd:extension base="TestModule">
        <xsd:sequence>
          <xsd:element name="configs" type="ConfigurationParameters" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="operation" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--Messaging Module Definition-->
  <xsd:complexType name="MessagingModule">
    <xsd:complexContent>
      <xsd:extension base="TestModule">
        <xsd:sequence>
          <xsd:element name="actorConfigs" type="ConfigurationParameters"/>
          <xsd:element name="transactionConfigs" type="ConfigurationParameters" minOccurs="0"/>
          <xsd:element name="listenConfigs" type="ConfigurationParameters" minOccurs="0"/>
          <xsd:element name="receiveConfigs" type="ConfigurationParameters" minOccurs="0"/>
          <xsd:element name="sendConfigs" type="ConfigurationParameters" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="isProxy" type="xsd:boolean" use="optional" default="true"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--List of configuration parameters-->
  <xsd:complexType name="ConfigurationParameters">
    <xsd:sequence>
      <xsd:element name="param" type="Parameter" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--List of typed paremeters-->
  <xsd:complexType name="TypedParameters">
    <xsd:sequence>
      <xsd:element name="param" type="TypedParameter" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Parameter Definition-->
  <xsd:complexType name="Parameter">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="use" type="UsageEnumeration" use="optional" default="R"/>
        <xsd:attribute name="kind" type="ConfigurationType" use="optional" default="SIMPLE"/>
        <xsd:attribute name="desc" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--Typed parameter definition-->
  <xsd:complexType name="TypedParameter">
    <xsd:simpleContent>
      <xsd:extension base="Parameter">
        <xsd:attribute name="type" type="xsd:string" use="required"/>
        <xsd:attribute name="encoding" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--Enumeration for test case types-->
  <xsd:simpleType name="TestCaseType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="CONFORMANCE"/>
      <xsd:enumeration value="INTEROPERABILITY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Enumeration for usage indicator-->
  <xsd:simpleType name="UsageEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="R"/>
      <xsd:enumeration value="O"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Enumeration for usage indicator-->
  <xsd:simpleType name="ConfigurationType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SIMPLE"/>
      <xsd:enumeration value="BINARY"/>
      <!--simple type, i.e. string-->
      <!--binary type-->
    </xsd:restriction>
  </xsd:simpleType>
  <!--Representation (serialization) of a GITB value-->
  <xsd:complexType name="AnyContent">
    <xsd:sequence>
      <xsd:element name="item" type="AnyContent" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="value" type="StringUriOrBase64Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="embeddingMethod" type="ValueEmbeddingEnumeration" use="optional" default="BASE64"/>
    <xsd:attribute name="type" type="xsd:string" use="optional"/>
    <xsd:attribute name="encoding" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <!--Enumeration for embedding method for the value-->
  <xsd:simpleType name="ValueEmbeddingEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="STRING"/>
      <xsd:enumeration value="BASE64"/>
      <xsd:enumeration value="URI"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Type definition for the actual content-->
  <xsd:simpleType name="StringUriOrBase64Type">
    <xsd:union memberTypes="xsd:string xsd:base64Binary xsd:anyURI"/>
  </xsd:simpleType>
  <!--Enumeration for representing the format of the given content-->
  <xsd:simpleType name="TestRoleEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUT"/>
      <xsd:enumeration value="SIMULATED"/>
      <xsd:enumeration value="MONITOR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Enumeration indicating the status of a test step execution-->
  <xsd:simpleType name="StepStatus">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="PROCESSING"/>
      <xsd:enumeration value="SKIPPED"/>
      <xsd:enumeration value="WAITING"/>
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="COMPLETED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACTOR_DEFINITION_NOT_FOUND"/>
      <xsd:enumeration value="ARTIFACT_NOT_FOUND"/>
      <xsd:enumeration value="CANCELLATION"/>
      <xsd:enumeration value="DATATYPE_ERROR"/>
      <xsd:enumeration value="INTERNAL_ERROR"/>
      <xsd:enumeration value="INVALID_SESSION"/>
      <xsd:enumeration value="INVALID_TEST_CASE"/>
      <xsd:enumeration value="MISSING_CONFIGURATION"/>
      <xsd:enumeration value="INVALID_CONFIGURATION"/>
      <xsd:enumeration value="TEST_CASE_DEFINITION_NOT_FOUND"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ErrorInfo">
    <xsd:sequence>
      <xsd:element name="errorCode" type="ErrorCode"/>
      <xsd:element name="description" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/ADMS-AP_Validator/services/validator/ValidatorService</con:endpoint></con:endpoints><con:operation id="bc5723a5-52c4-43e1-811b-6a369784d32e" isOneWay="false" action="" name="getDefinition" bindingOperationName="getDefinition" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ef73a4fb-c1d3-4c1f-8dd5-c9d3ff2148ae" name="getDefinition"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/ADMS-AP_Validator/services/validator/ValidatorService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://adms-ap.semic.eu/validator/1.0/xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <xsd:DefinitionRequestType/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://services/ValidatorService/IValidatorService/getDefinitionRequest"/></con:call></con:operation><con:operation id="9a618290-d68d-4bcb-88ad-b6fd13ec85ce" isOneWay="false" action="" name="validate" bindingOperationName="validate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5dcfe180-12c1-4412-a1b0-21622723421d" name="validation"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/ADMS-AP_Validator/services/validator/ValidatorService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://adms-ap.semic.eu/validator/1.0/xsd" xmlns:ns="http://adms-ap.semic.eu/validator/1.0/xsd/2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <xsd:ValidateRequestType>\r
         <xsd:rulesURI embeddingMethod="URI">\r
            <ns:value>http://localhost:8890/sparql.txt</ns:value>\r
         </xsd:rulesURI>\r
         <xsd:databaseURI embeddingMethod="URI">\r
            <ns:value>http://localhost:8890/spql</ns:value>\r
         </xsd:databaseURI>\r
         <xsd:dataURI embeddingMethod="URI">\r
            <ns:value>http://localhost:8890/data.ttl</ns:value>\r
         </xsd:dataURI>\r
         <!--Optional:-->\r
         <xsd:sessionID>?</xsd:sessionID>\r
         <!--Optional:-->\r
         <xsd:outputFormat>\r
            <ns:value>XML</ns:value>\r
         </xsd:outputFormat>\r
      </xsd:ValidateRequestType>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://services/ValidatorService/IValidatorService/validateRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="efe353e4-5318-4e95-a95b-4948b78eac28" name="Fault message"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/ADMS-AP_Validator/services/validator/ValidatorService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://adms-ap.semic.eu/validator/1.0/xsd" xmlns:ns="http://adms-ap.semic.eu/validator/1.0/xsd/2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <xsd:ValidateRequestType>\r
         <xsd:rulesURI embeddingMethod="URI">\r
            <ns:value>http://localhost:8890/sparql.txt</ns:value>\r
         </xsd:rulesURI>\r
         <xsd:databaseURI embeddingMethod="URI">\r
            <ns:value>http://localhost:8890/sparql</ns:value>\r
         </xsd:databaseURI>\r
         <xsd:dataURI embeddingMethod="URI">\r
            <ns:value>http://localhost:8890/data.ttl</ns:value>\r
         </xsd:dataURI>\r
         <!--Optional:-->\r
         <xsd:sessionID>?</xsd:sessionID>\r
         <!--Optional:-->\r
         <xsd:outputFormat>\r
            <ns:value>XML</ns:value>\r
         </xsd:outputFormat>\r
      </xsd:ValidateRequestType>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://services/ValidatorService/IValidatorService/validateRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>